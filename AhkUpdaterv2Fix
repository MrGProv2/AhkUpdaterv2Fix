;
; https://github.com/MrGProv2/AhkUpdaterv2Fix by MrGPro Free Buld
; Нет фильтров и исколючений возможны баги и прочее фикси сам
;

global ScriptVersion = "0.0.9" ; Версия данного скрипта
global UrlServerInfo = "https://raw.githubusercontent.com/MrGProv2/AhkUpdaterv2Fix/main/update.json" ; Ссылка на файл с версией, ссылкой на файл, описанием, и лог изменений
global info = [] ; массив для глобального использывания

; функция ппроверки интернет-соединения
ConnectedToInternet(flag=0x40) ; интернет коннектор статус сети
{
Return DllCall("Wininet.dll\InternetGetConnectedState", "Str", flag,"Int",0)
}

; функция для работы с json структурами
Json(i)
{
  ;ENCODE
  if (isobject(i))
  {
    o := "", a := 1, x := 1
    for k,v in i
    {
      if (k!=x)
        a := 0, break
      x += 1
    }
    o .= (a) ? "[" : "{", f := 1
    for k,v in i
      o .= ((f) ? "" : ",")((a) ? "" : """" k """:")((isobject(v)) ? json(v) : ((v+0=v) ? v : """" v """")), f := 0
    return o ((a) ? "]" : "}")
  }
  ;DECODE
  if (regexmatch(i, "s)^__chr(A|W):(.*)", m))
  {
    VarSetCapacity(b, 4, 0), NumPut(m2, b, 0, "int")
    return StrGet(&b, 1, (m1="A") ? "cp28591" : "utf-16")
  }
  if (regexmatch(i, "s)^__str:((\\""|[^""])*)", m))
  {
    str := m1
    for p,r in {b:"`b", f:"`f", n:"`n", 0:"", r:"`r", t:"`t", v:"`v", "'":"'", """":"""", "/":"/"}
      str := regexreplace(str, "\\" p, r)
    while (regexmatch(str, "s)^(.*?)\\x([0-9a-fA-F]{2})(.*)", m))
      str := m1 json("__chrA:0x" m2) m3
    while (regexmatch(str, "s)^(.*?)\\u([0-9a-fA-F]{4})(.*)", m))
      str := m1 json("__chrW:0x" m2) m3
    while (regexmatch(str, "s)^(.*?)\\([0-9]{1,3})(.*)", m))
      str := m1 json("__chrA:" m2) m3
    return regexreplace(str, "\\\\", "\")
  }
  str := [], obj := []
  while (RegExMatch(i, "s)^(.*?[^\\])""((\\""|[^""])*?[^\\]|)""(.*)$", m))
    str.insert(json("__str:" m2)), i := m1 "__str<" str.maxIndex() ">" m4
  while (RegExMatch(RegExReplace(i, "\s+", ""), "s)^(.*?)(\{|\[)([^\{\[\]\}]*?)(\}|\])(.*)$", m))
  {
    a := (m2="{") ? 0 : 1, c := m3, i := m1 "__obj<" ((obj.maxIndex()+1) ? obj.maxIndex()+1 : 1) ">" m5, tmp := []
    while (RegExMatch(c, "^(.*?),(.*)$", m))
      tmp.insert(m1), c := m2
    tmp.insert(c), tmp2 := {}, obj.insert(cobj := {})
    for k,v in tmp
    {
      if (RegExMatch(v, "^(.*?):(.*)$", m))
        tmp2[m1] := m2
      else
        tmp2.insert(v)
    }
    for k,v in tmp2
    {
      for x,y in str
        k := RegExReplace(k, "__str<" x ">", y), v := RegExReplace(v, "__str<" x ">", y)
      for x,y in obj
        v := RegExMatch(v, "^__obj<" x ">$") ? y : v
      cobj[k] := v
    }
  }
  return obj[obj.maxIndex()]
}

; упрощённая функция запроса по http/https
Http(ByRef URL, COM = "GET")
{
	WinHTTP := ComObjCreate("WinHttp.WinHttpRequest.5.1")
	WinHTTP.Open(COM, URL, false)
	WinHTTP.Send()
	return % WinHTTP.ResponseText
}

; функция инициализации интерфейса обловлятора
Update_FORM(ByRef Version = "", ByRef Description = "")
{
  Gui, Update:+LastFound -SysMenu
  Gui, Update:Color, FFFFFF
  Gui, Update:-MinimizeBox
  Gui, Update:Add, TreeView, x240 y375 w240 h84,
  Gui, Update:Add, Edit, x10 y10 w480 h240 ReadOnly, %Description%
  Gui, Update:Add, Button, x90 y260 w125 h30 gUpdate, Обновить
  Gui, Update:Add, Button, x285 y260 w125 h30 gUpdateGuiClose, Отмена
  Gui, Update:Show, w500 h300, > Доступно обновление %ScriptVersion% до %Version%
}

Check_Update:
if ConnectedToInternet() ; есть подключение к сети
{
	SplashTextOn, , 60, Менеджер обновлений, % "Проверка обновления" . "`n" . "Ожидайте" 	; информер процесса
	sleep, 2000
	info := Json(Http(UrlServerInfo)) 	; получаем данные с файла
	if (info["version"] > ScriptVersion) ; найдена новая версия
	{
		Descript_text := % Http(info["changelog_url"]) != "" ? Http(info["changelog_url"]) : "" ; заполняем описание в переменную через тернар при услови что не пустое
		SplashTextOn, , 60, Менеджер обновлений, % "Обнаружено обновление" . "`n" . "версия: " . info["version"] 	; информер процесса
		sleep, 2000
		SplashTextoff
		Update_FORM(ver, Descript_text) ; инициализируем интерфейс обновлятора
	}
}
else ; нет доступа к интернету
{
    MsgBox, 48, Менеджер обновлений, % "Доступ к интернету не обнаружен" . "`n" . "Проверьте своё интернет соединение"
    goto, Script
}
return

; запускаем обновление по тыку кнопки обновить
Update:
Msgbox, 1, % "Обновление до " . info["version"], Вы желаете выполнить обновление?
IfMsgBox, OK
{

    SplashTextOn, , 60 ,Менеджер обновлений, % "Ожидайте" . "`n" . "Обновляем до " . info["version"] ; информер процесса
    sleep, 1000
    SplashTextOn, , 60, Менеджер обновлений, % "Ожидайте" . "`n" . "Скачиваю обновление  " . info["version"] ; информер процесса
    URLDownloadToFile, % info["download_url"], % A_ScriptDir . "/" . info["file_exe"] . ".zip" ; загружаем исключительно zip архив и переименовываем его в имя исполнительного файла без exe
		IfExist, % A_ScriptDir . "/" . info["file_exe"] . ".zip" ; проверяем загружен файл или нет
		{
			SplashTextOn, , 60, Менеджер обновлений, % "Ожидайте" . "`n" . "Распаковка обновления  " . info["version"] ; информер процесса
			; выполняем распаковку архива в каталог текущего скрипта
			Shell := ComObjCreate("Shell.Application")
			Items := Shell.NameSpace(A_ScriptDir . "\" . info["file_exe"] . ".zip")
			Shell.NameSpace(A_ScriptDir).CopyHere(Items.items, 4|16)
		}
		else
		{
			MsgBox, 48, Менеджер обновлений, % "Обновление не было загружено" . "`n" ."Проверьте своё интернет соединение или сообщите разработчику" ; информер процесса
			goto, Script
		}
	}
	sleep, 2000
    SplashTextOn, , 60,Менеджер обновлений, % "Ожидайте" . "`n" . "Запускаю обновлённый " . "`n" . info["file_exe"] . ".exe" ; информер процесса
    sleep, 3000
    run, % A_ScriptDir . "\" . info["file_exe"] ; запускаем файл после обновления
    ExitApp

}
IfMsgBox, CANCEL
{
    Gui, Update:Destroy ; удаляем форму обновления
    goto, Script
}
return

UpdateGuiClose:
Gui, Update:Destroy
goto, Script
return

; ваш  тело скрипта или запуск типа run
Script:
MsgBox, Скрипт запущен
ExitApp
